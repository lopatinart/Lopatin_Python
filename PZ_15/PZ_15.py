# Приложение БЮРО ПО ТРУДОУСТРОЙСТВУ для некоторой организации. БД
# должна содержать таблицу Работник со следующей структурой записи: фамилия, имя,
# отчество, возраст, пол, профессия, стаж работы.
import sqlite3

# Создаем базу данных и подключаемся к ней
conn = sqlite3.connect('employment_bureau.db')
cursor = conn.cursor()

# Создаем таблицу Работник
cursor.execute('''CREATE TABLE IF NOT EXISTS Работник (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                фамилия TEXT NOT NULL,
                имя TEXT NOT NULL,
                отчество TEXT,
                возраст INTEGER,
                пол TEXT,
                профессия TEXT,
                стаж_работы INTEGER,
                UNIQUE(фамилия, имя, отчество)  -- Уникальность по ФИО
                )''')

# Список сотрудников для добавления
employees = [
    ('Иванов', 'Иван', 'Иванович', 35, 'М', 'Программист', 7),
    ('Петрова', 'Мария', 'Сергеевна', 28, 'Ж', 'Дизайнер', 4),
    ('Сидоров', 'Алексей', 'Петрович', 42, 'М', 'Менеджер', 12),
    ('Кузнецова', 'Елена', 'Владимировна', 31, 'Ж', 'Бухгалтер', 8),
    ('Федоров', 'Дмитрий', 'Николаевич', 45, 'М', 'Инженер', 15),
    ('Смирнова', 'Ольга', 'Игоревна', 29, 'Ж', 'Маркетолог', 5),
    ('Васильев', 'Андрей', 'Александрович', 38, 'М', 'Программист', 10),
    ('Николаева', 'Татьяна', 'Дмитриевна', 33, 'Ж', 'HR-специалист', 6),
    ('Павлов', 'Сергей', 'Викторович', 40, 'М', 'Аналитик', 9),
    ('Ковалева', 'Анна', 'Олеговна', 27, 'Ж', 'Дизайнер', 3)
]

# Добавляем сотрудников с использованием INSERT OR IGNORE
cursor.executemany('''INSERT OR IGNORE INTO Работник 
                    (фамилия, имя, отчество, возраст, пол, профессия, стаж_работы)
                    VALUES (?, ?, ?, ?, ?, ?, ?)''', employees)
conn.commit()

print(f"Добавлено {cursor.rowcount} новых работников из 10 возможных")

# 1. Примеры запросов поиска
print("\n1. Примеры запросов поиска:")

# 1.1 Поиск всех программистов
cursor.execute("SELECT * FROM Работник WHERE профессия = 'Программист'")
print("\n1.1 Все программисты:")
for row in cursor.fetchall():
    print(row)

# 1.2 Поиск работников старше 30 лет
cursor.execute("SELECT * FROM Работник WHERE возраст > 30")
print("\n1.2 Работники старше 30 лет:")
for row in cursor.fetchall():
    print(row)

# 1.3 Поиск женщин с опытом более 5 лет
cursor.execute("SELECT * FROM Работник WHERE пол = 'Ж' AND стаж_работы > 5")
print("\n1.3 Женщины с опытом более 5 лет:")
for row in cursor.fetchall():
    print(row)

# 2. Примеры запросов удаления
print("\n2. Примеры запросов удаления:")

# 2.1 Удаление всех со стажем меньше 5 лет
cursor.execute("DELETE FROM Работник WHERE стаж_работы < 5")
print(f"2.1 Удалено {cursor.rowcount} работников с стажем меньше 5 лет")
conn.rollback()

# 2.2 Удаление всех Ивановых
cursor.execute("DELETE FROM Работник WHERE фамилия = 'Иванов'")
print(f"2.2 Удалено {cursor.rowcount} работников с фамилией Иванов")
conn.rollback()

# 2.3 Удаление всех младше 25 лет
cursor.execute("DELETE FROM Работник WHERE возраст < 25")
print(f"2.3 Удалено {cursor.rowcount} работников младше 25 лет")
conn.rollback()

# 3. Примеры запросов обновления
print("\n3. Примеры запросов обновления:")

# 3.1 Увеличить стаж всем программистам на 1 год
cursor.execute("UPDATE Работник SET стаж_работы = стаж_работы + 1 WHERE профессия = 'Программист'")
print(f"3.1 Обновлено {cursor.rowcount} записей программистов (стаж +1 год)")
conn.rollback()

# 3.2 Изменить профессию у работников с ID 3 и 5 на 'Специалист'
cursor.execute("UPDATE Работник SET профессия = 'Специалист' WHERE id IN (3, 5)")
print(f"3.2 Обновлено {cursor.rowcount} записей (ID 3 и 5)")
conn.rollback()

# 3.3 Исправить возраст всем Петровым на 30 лет
cursor.execute("UPDATE Работник SET возраст = 30 WHERE фамилия = 'Петрова'")
print(f"3.3 Обновлено {cursor.rowcount} записей (Петрова)")
conn.rollback()

# Закрываем соединение
conn.close()